#!/bin/bash

# Gitlab 数据备份


一、查看Gitlab数据备份目录
cat /etc/gitlab/gitlab.rb | grep 'backup_path'
gitlab_rails['backup_path'] = "/var/opt/gitlab/backups"

二、备份Gitlab数据
gitlab-rake gitlab:backup:create


三、还原Gitlab数据
# 停止相关数据连接服务
gitlab-ctl stop unicorn
gitlab-ctl stop sidekiq

# 从上一个备份的版本中恢复数据(1499311027_2017_07_05_9.3.4_gitlab_backup.tar)
gitlab-rake gitlab:backup:restore BACKUP=1499311027_2017_07_05_9.3.4

# 启动gitlab
gitlab-ctl start


四、Gitlab自动备份
将备份命令添加至计划任务,可以执行每天定期进行备份
0 2 * * * /opt/gitlab/bin/gitlab-rake gitlab:backup:create


五、Gitlab数据迁移
迁移如同备份与恢复的步骤一样, 只需要将老服务器/var/opt/gitlab/backups目录下的备份文件拷贝到新服务器上的/var/opt/gitlab/backups即可(如果你没修改过默认备份目录的话). 但是需要注意的是新服务器上的Gitlab的版本必须与创建备份时的Gitlab版本号相同. 比如新服务器安装的是最新的7.60版本的Gitlab, 那么迁移之前, 最好将老服务器的Gitlab 升级为7.60在进行备份.
